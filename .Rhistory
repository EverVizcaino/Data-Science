library(readr)
DataSetFallosMaquina <- read_csv("~/Desafio R 7 dias/DataSetFallosMaquina.csv")
View(DataSetFallosMaquina)
#Carga de librerias
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
#carga del dataset
df <- read.csv(file = 'DataSetFallosMaquina.csv',sep=';')
#carga del dataset
df <- read.csv(file = 'DataSetFallosMaquina.csv',sep=';')
#Visión general del dataset
glimpse(df)
##tener una gran vison de los datos, nos muestra las distribuciones de los datos
skim(df)
#grafico
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
View(DataSetFallosMaquina)
#Carga de librerias
library(dplyr)
library(skimr)
library(lubridate)
library(tidyr)
library(ggplot2)
#carga del dataset
df <- read.csv(file = 'DataSetFallosMaquina.csv',sep=';')
#Visión general del dataset
glimpse(df)
#tener una gran vison de los datos, nos muestra las distribuciones de los datos
skim(df)
#grafico este grafico nos permite ver si hay otliers
# GRAFICO DE LA TEMPERATURA
ggplot(df,x=1) + geom_boxplot(aes(y=Temperature))
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperatura
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
table(df$Failure)
81/nrow(df)*100
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No')  %>%
sample_frac(size= 0.08)
dim(df_nos)
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
# 7.2 Roles de las variables
777-696
?reformulate
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es  failure
formula <- reformulate(indep, target)
# Se realiza la regresión logística
rl <- glm(formula, df_read, family = binomial(link = 'logit'))  #glm= modelo lineal generalizado
# Se realiza la regresión logística
rl <- glm(formula, df_red, family = binomial(link = 'logit'))  #glm= modelo lineal generalizado
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es  failure
formula <- reformulate(indep, target)
# Se realiza la regresión logística
rl <- glm(formula, df_red, family = binomial(link = 'logit'))  #glm= modelo lineal generalizado
# Se realiza la regresión logística
rl <- glm(formula,df_red,family=binomial(link='logit')) #glm= modelo lineal generalizado
df <- df %>%
mutate(Measure2 = as.factor(Measure2), #Corregimos Measure2
Measure3 = as.factor(Measure3)) %>% #Corregimos Measure3
filter(Temperature > 50) #eliminamos los 4 atípicos de temperatura
df %>%
select_if(is.factor) %>%
gather() %>%
ggplot(aes(value)) + geom_bar() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del texto del eje y que se lea bien
#Y las de tipo entero
df %>%
select_if(is.integer) %>%
gather() %>%
ggplot(aes(value)) + geom_density() + facet_wrap(~key,scales='free') +
theme(axis.text=element_text(size=6))#esto es para cambiar el tamaño del tex
df %>%
select_if(is.integer) %>%
cor() %>%
round(digits = 2)
table(df$Failure)
set.seed(1234) #para que nos salga lo mismo
df_nos <- df %>%
filter(Failure == 'No')  %>%
sample_frac(size= 0.08)
dim(df_nos)
#Df de sis
df_sis <- df %>% filter(Failure == 'Yes')
#Y los unimos de nuevo en un nuevo df reducido
df_red <- rbind(df_nos,df_sis)
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
81/nrow(df_red) * 100
target <- 'Failure'
indep <- names(df_red)[-20] #la variable 20 es  failure
formula <- reformulate(indep, target) #le decimos a R que nos haga una formula para que nos desarrolloe
formula
# Se realiza la regresión logística
rl <- glm(formula,df_red,family=binomial(link='logit')) #glm= modelo lineal generalizado
formula <- reformulate(target, indep) #le decimos a R que nos haga una formula para que nos desarrolloe# el modelo de que tiene como variable independiente a target y que depende de indep
formula <- reformulate(indep, target) #le decimos a R que nos haga una formula para que nos desarrolloe# el modelo de que tiene como variable independiente a target y que depende de indep
formula
install.packages("car")
library(car)
install.packages('carData')
install.packages('carData')
table(data_red$failure)
table(df_red$failure)
table(df_red$Failure)
df_red$fallo<- recode(df_red$Failure, "No= 0 ; Si= 1")
df_red$fallo<- recode(df_red$Failure, "No= 0 ; Yes= 1")
df_red$fallo<- recode(df_red$Failure, "No= 1 ; Yes= 0")
View(df_red)
df_red$Failure2<- recode(df_red$Failure, "No= 0 ; Yes= 1")
#Comprobamos de nuevo la penetación de la target
count(df_red,Failure)
table(df_red$Failure)
df_red$Failure2<- factor(recode(df_red$Failure, "No= 0 ; Yes= 1"))
# Se realiza la regresión logística
rl <- glm(formula,df_red,family=binomial(link='logit')) #glm= modelo lineal generalizado
as.factor(df_red$Failure)
# Se realiza la regresión logística
rl <- glm(formula,df_red,family=binomial(link='logit')) #glm= modelo lineal generalizado
# Se realiza la regresión logística
rl <- glm(formula,Failure,family=binomial(link='logit')) #glm= modelo lineal generalizado
# Se realiza la regresión logística
rl <- glm(formula,df_red.Failure,family=binomial(link='logit')) #glm= modelo lineal generalizado
df2<- as.factor(df_red$Failure)
# Se realiza la regresión logística
rl <- glm(formula,df2,family=binomial(link='logit')) #glm= modelo lineal generalizado
df3 <- df %>% df2
df_red <- df_red %>%
mutate(Failure = as.factor(Failure))
# Se realiza la regresión logística
rl <- glm(formula,df_red,family=binomial(link='logit')) #glm= modelo lineal generalizado
summary(rl) #Vemos el resultado
summary(rl) #Vemos el resultado
options(scipen=999)#Desactiva la notacion cientifica
summary(rl) #Vemos el resultado
# Se realiza la regresión logística
rl <- glm(formula,df_red,family=binomial(link='logit')) #glm= modelo lineal generalizado
summary(rl) #Vemos el resultado
# Sólo resultan predictivas al menos al 95% tres variables,
# que vamos a seleccionar como finales
indep_fin <- c('Temperature','Humidity','Measure21', 'Measure10', 'OperatorOperator2')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
# Modelizamos otra vez
rl<- glm(formula,df_red,family = binomial(link='logit'))
idep_fin <- indep_fin %>%
mutate(Measure21 = as.factor(Measure21))
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
# Modelizamos otra vez
rl<- glm(formula,indep_fin,family = binomial(link='logit'))
# Sólo resultan predictivas al menos al 95% tres variables,
# que vamos a seleccionar como finales
indep_fin <- c('Temperature','Humidity', 'Measure10', 'OperatorOperator2')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
# Modelizamos otra vez
rl<- glm(formula,indep_fin,family = binomial(link='logit'))
# Modelizamos otra vez
rl<- glm(formula,data_red,family = binomial(link='logit'))
# Modelizamos otra vez
rl<- glm(formula,df_red,family = binomial(link='logit'))
# Sólo resultan predictivas al menos al 95% tres variables,
# que vamos a seleccionar como finales
indep_fin <- c('Temperature','Humidity', 'Measure10')
formula <- reformulate(indep_fin,target) #actualizamos la fórmula
# Modelizamos otra vez
rl<- glm(formula,df_red,family = binomial(link='logit'))
summary(rl)
# Aplicamos nuestro modelo a los datos
df$scoring <- predict(rl,df,type='response')
head(df$scoring)
df$prediccion<- ifelse(df$scoring> 0.8,1,0) # si se cumple la condicion 1 sino 0
head(df$prediccion)
table(df$prediccion)
table(df$prediccion, df$Failure)
